version: 2

sources:
  - name: pagila
    description: "base models"
    # database:
    freshness: # default freshness
      warn_after: { count: 123456789, period: day }
      error_after: { count: 999999999, period: day }
    loaded_at_field: last_update
    schema: public
    tables:
      - name: actor
        description: "description for actor table from dbt"
        meta:
          owner: "groupemail@gmail.com"
          business_owner: "#slack-channel-name"
          data_tier: Bronze # chosen from [Bronze,Gold,Silver]
        columns:
          - name: actor_id
            description: "description for actor_id column from dbt"
            tests:
              - not_null
              - unique
          - name: first_name
            description: "description for first_name from dbt"
          - name: last_name
            description: "description for last_name from dbt"
          - name: last_update
            description: "description for last_update from dbt"
      - name: address
        description: "a user's address"
      - name: category
        description: "a user's category"
      - name: city
      - name: country
      - name: customer
        description: "description for customer table from dbt"
      - name: payment_p2020_01
        identifier: payment_p2020_01
        loaded_at_field: payment_date
      - name: payment_p2020_02
        identifier: payment_p2020_02
        loaded_at_field: payment_date
      - name: payment_p2020_03
        identifier: payment_p2020_03
        loaded_at_field: payment_date
      - name: payment_p2020_04
        identifier: payment_p2020_04
        loaded_at_field: payment_date
      - name: payment_p2020_05
        identifier: payment_p2020_05
        loaded_at_field: payment_date
        description: "a payment"
      - name: payment_p2020_06
        identifier: payment_p2020_06
        loaded_at_field: payment_date

models:
  - name: payments_by_customer_by_month
    columns:
      - name: billing_month
      - name: customer_id
        description: "description for customer_id from dbt"
      - name: amount

  - name: monthly_billing_with_cust
    columns:
      - name: billing_month
        tests:
          - not_null
      - name: customer_id
        tests:
          - relationships:
              to: ref('customer_details')
              field: customer_id
      - name: email
        tests:
          - not_null
          - is_email
